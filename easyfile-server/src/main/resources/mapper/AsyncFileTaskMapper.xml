<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.openquartz.easyfile.server.mapper.AsyncFileTaskMapper">
    <resultMap id="BaseResultMap" type="com.openquartz.easyfile.server.entity.AsyncFileTask">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="task_code" jdbcType="VARCHAR" property="taskCode"/>
        <result column="task_type" jdbcType="TINYINT" property="taskType"/>
        <result column="task_desc" jdbcType="VARCHAR" property="taskDesc"/>
        <result column="limiting_strategy" jdbcType="VARCHAR" property="limitingStrategy"/>
        <result column="app_id" jdbcType="VARCHAR" property="appId"/>
        <result column="unified_app_id" jdbcType="VARCHAR" property="unifiedAppId"/>
        <result column="enable_status" jdbcType="TINYINT" property="enableStatus"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="deleted" jdbcType="BIGINT" property="deleted"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        task_code,
        task_type,
        task_desc,
        limiting_strategy,
        app_id,
        unified_app_id,
        enable_status,
        version,
        create_time,
        update_time,
        create_by,
        update_by,
        deleted
    </sql>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO ef_async_file_task
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskCode != null">
                task_code,
            </if>
            <if test="taskType != null">
                task_type,
            </if>
            <if test="taskDesc != null">
                task_desc,
            </if>
            <if test="limitingStrategy != null">
                limiting_strategy,
            </if>
            <if test="appId != null">
                app_id,
            </if>
            <if test="unifiedAppId != null and unifiedAppId != ''">
                unified_app_id,
            </if>
            <if test="enableStatus != null">
                enable_status,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="deleted != null">
                deleted
            </if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskCode != null">
                #{taskCode,jdbcType=VARCHAR},
            </if>
            <if test="taskType != null">
                #{taskType,jdbcType=TINYINT},
            </if>
            <if test="taskDesc != null">
                #{taskDesc,jdbcType=VARCHAR},
            </if>
            <if test="limitingStrategy != null">
                #{limitingStrategy,jdbcType=VARCHAR},
            </if>
            <if test="appId != null">
                #{appId,jdbcType=VARCHAR},
            </if>
            <if test="unifiedAppId != null and unifiedAppId != ''">
                #{unifiedAppId,jdbcType=VARCHAR},
            </if>
            <if test="enableStatus != null">
                #{enableStatus,jdbcType=TINYINT},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=BIGINT}
            </if>
        </trim>
    </insert>

    <select id="findById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ef_async_file_task
        where id = #{id}
          AND deleted = 0
    </select>

    <select id="selectByDownloadCode" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ef_async_file_task
        where task_code = #{taskCode}
          AND app_id = #{appId}
          AND deleted = 0
    </select>

    <select id="selectAllAppId" resultType="java.lang.String">
        select distinct app_id
        from ef_async_file_task
        where deleted = 0
    </select>

    <select id="listByDownloadCode" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ef_async_file_task
            where task_code in
        <foreach collection="list" item="item" close=")" open="(" separator="," index="index">
            #{item}
        </foreach>
        AND app_id in
        <foreach collection="appIdList" open="(" close=")" item="item" separator="," index="index">
            #{item}
        </foreach>
        AND deleted = 0
    </select>

    <select id="getByUnifiedAppId" resultType="java.lang.String">
        select distinct app_id
        from ef_async_file_task
        where unified_app_id = #{unifiedAppId}
          and deleted = 0
    </select>

    <insert id="insertList">
        INSERT INTO ef_async_file_task(task_code,
                                           task_type,
                                           task_desc,
                                           app_id,
                                           unified_app_id,
                                           enable_status,
                                           limiting_strategy,
                                           version,
                                           create_time,
                                           update_time,
                                           create_by,
                                           update_by,
                                           deleted)VALUES
        <foreach collection="list" item="element" index="index" separator=",">
            (#{element.taskCode,jdbcType=VARCHAR},
            #{element.taskType,jdbcType=TINYINT},
            #{element.taskDesc,jdbcType=VARCHAR},
            #{element.appId,jdbcType=VARCHAR},
            #{element.unifiedAppId,jdbcType=VARCHAR},
            #{element.enableStatus,jdbcType=TINYINT},
            #{element.limitingStrategy,jdbcType=VARCHAR},
            #{element.version,jdbcType=INTEGER},
            #{element.createTime,jdbcType=TIMESTAMP},
            #{element.updateTime,jdbcType=TIMESTAMP},
            #{element.createBy,jdbcType=VARCHAR},
            #{element.updateBy,jdbcType=VARCHAR},
            #{element.deleted,jdbcType=BIGINT})
        </foreach>
    </insert>

    <update id="refreshTaskDesc">
        update ef_async_file_task
        set task_desc = #{taskDesc}
        where id = #{id}
    </update>

    <select id="getAppTree" resultType="com.openquartz.easyfile.server.entity.AsyncFileAppEntity">
        select distinct app_id, unified_app_id
        from ef_async_file_task
        where deleted = 0
    </select>
</mapper>